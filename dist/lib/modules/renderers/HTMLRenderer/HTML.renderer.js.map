{"version":3,"file":"HTML.renderer.js","sourceRoot":"","sources":["../../../../../src/lib/modules/renderers/HTMLRenderer/HTML.renderer.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAIA,+BAAyB;AACzB,2CAAmC;AACnC,2EAAmD;AACnD,2EAAmD;AAEnD,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,MAAM,UAAU;IACZ,YAAoB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAChC,CAAC;IAED,UAAU,CAAC,IAAY;QACnB,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;CACJ;AAED,MAAqB,YAAY;IACvB,MAAM,CAAC,WAAwB,EAAE,UAAkB,EAAE;;YACvD,MAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAClF,MAAM,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEvE,MAAM,QAAQ,GAAG,oBAAO,CAAC,YAAY,CAAC,CAAC;YACvC,IAAI,IAAI,GAAG;gBACP,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,WAAW,EAAE,WAAW,CAAC,WAAW;gBACpC,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACrC,KAAK,EAAE,KAAK,CAAC,KAAK;oBAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;wBACnC,IAAI,OAAO,YAAY,qBAAW,EAAE;4BAChC,OAAO;gCACH,MAAM,EAAE,IAAI;gCACZ,QAAQ,EAAE,OAAO,CAAC,QAAQ;gCAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;6BAC3B,CAAA;yBACJ;6BAAM,IAAI,OAAO,YAAY,qBAAW,EAAE;4BACvC,OAAO;gCACH,MAAM,EAAE,IAAI;gCACZ,OAAO,EAAE,OAAO,CAAC,OAAO;6BAC3B,CAAA;yBACJ;6BAAM;4BACH,OAAO;gCACH,aAAa,EAAE,IAAI;gCACnB,OAAO,EAAE,OAAO,CAAC,OAAO;6BAC3B,CAAA;yBACJ;oBACL,CAAC,CAAC;iBACL,CAAC,CAAC;aACN,CAAC;YAEF,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAE1C,CAAC;KAAA;CACJ;AAvCD,+BAuCC","sourcesContent":["import CheatySheet from \"../../../CheatySheet\";\nimport Renderer from \"../Renderer.interface\";\nimport Render from \"../Render.interface\";\n\nimport {join} from \"path\"\nimport {compile} from \"handlebars\";\nimport CodeSection from \"../../blocks/CodeSection\";\nimport TextSection from \"../../blocks/TextSection\";\n\nconst fs = require('fs');\n\nclass HTMLRender implements Render {\n    constructor(private html: string) {\n    }\n\n    saveToDisk(path: string): void {\n        fs.writeFileSync(path, this.html);\n    }\n\n    toString(): string {\n        return this.html;\n    }\n}\n\nexport default class HTMLRenderer implements Renderer {\n    async render(cheatySheet: CheatySheet, options: object = {}): Promise<Render> {\n        const templateHtml = fs.readFileSync(join(__dirname, \"template.html\")).toString();\n        const style = fs.readFileSync(join(__dirname, \"style.css\")).toString();\n\n        const template = compile(templateHtml);\n        let data = {\n            style: style,\n            title: cheatySheet.title,\n            description: cheatySheet.description,\n            size: cheatySheet.size,\n            options: cheatySheet.options,\n            blocks: cheatySheet.blocks.map(block => ({\n                title: block.title,\n                sections: block.sections.map(section => {\n                    if (section instanceof CodeSection) {\n                        return {\n                            isCode: true,\n                            language: section.language,\n                            content: section.content\n                        }\n                    } else if (section instanceof TextSection) {\n                        return {\n                            isText: true,\n                            content: section.content\n                        }\n                    } else {\n                        return {\n                            isUnsupported: true,\n                            content: section.content\n                        }\n                    }\n                })\n            }))\n        };\n\n        return new HTMLRender(template(data));\n\n    }\n}"]}