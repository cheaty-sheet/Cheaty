title: NGINX
description: "test"
blocks:
  - title: Port (listen)
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            # standard HTTP protocol
            listen 80;

            # standard HTTPS protocol
            listen 443 ssl;

            # listen on 80 using IPv6
            listen [::]:80;

            # listen only on IPv6
            listen [::]:80 ipv6only=on;
          }
  - title: Domain name (server_name)
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            # Listen to yourdomain.com
            server_name yourdomain.com;

            # Listen to multiple domains
            server_name yourdomain.com www.yourdomain.com;

            # Listen to all sub-domains
            server_name *.yourdomain.com;

            # Listen to all top-level domains
            server_name yourdomain.*;

            # Listen to unspecified hostnames (listens to IP address itself)
            server_name "";
          }
  - title: Access Logging (access_log)
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            # Relative or full path to log file
            access_log /path/to/file.log;

            # Turn 'on' or 'off'
            access_log on;
          }
  - title: Miscellaneous (gzip, client_max_body_size)
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            # Turn gzip compression 'on' or 'off'
            gzip on;

            # Limit client body size to 10mb
            client_max_body_size 10M;
          }
  - title: Static assets
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            listen 80;
            server_name yourdomain.com;

            location / {
            	root /path/to/website;
            }
          }
  - title: Static assets with HTML5 History Mode
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            listen 80;
            server_name yourdomain.com;
            root /path/to/website;

            location / {
            	try_files $uri $uri/ /index.html;
            }
          }
  - title: Redirects
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            listen 80;
            server_name www.yourdomain.com;
            return 301 http://yourdomain.com$request_uri;
          }
      - type: code
        language: nginx
        content: >-
          server {
            listen 80;
            server_name yourdomain.com;

            location /redirect-url {
          	    return 301 http://otherdomain.com;
            }
          }
  - title: Reverse Proxy
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            listen 80;
            server_name yourdomain.com;

            location / {
                proxy_pass http://0.0.0.0:3000;
                # where 0.0.0.0:3000 is your Node.js Server bound on 0.0.0.0 listing on port 3000
            }
          }
  - title: SSL
    sections:
      - type: code
        language: nginx
        content: >-
          server {
            listen 443 ssl;
            server_name yourdomain.com;

            ssl on;

            ssl_certificate /path/to/cert.pem;
            ssl_certificate_key /path/to/privkey.pem;

            ssl_stapling on;
            ssl_stapling_verify on;
            ssl_trusted_certificate /path/to/fullchain.pem;

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            ssl_session_timeout 1d;
            ssl_session_cache shared:SSL:50m;
            add_header Strict-Transport-Security max-age=15768000;
          }

          # Permanent redirect for HTTP to HTTPS
          server {
            listen 80;
            server_name yourdomain.com;
            return 301 https://$host$request_uri;
          }
  - title: Load Balancing
    sections:
      - type: code
        language: nginx
        content: >-
          upstream node_js {
            server 0.0.0.0:3000;
            server 0.0.0.0:4000;
            server 123.131.121.122;
          }

          server {
            listen 80;
            server_name yourdomain.com;

            location / {
                proxy_pass http://node_js;
            }
          }